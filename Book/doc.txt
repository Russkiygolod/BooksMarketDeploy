docker run --net=book_m -d --rm --name book -e DB_USER_P=postgres -e DB_PASSWORD_P=postgres -e DB_NAME_P=BookMarket -e HOST_P=postgres -e HOST_R=redis book:1

docker run --rm -d --net=book_m --name postgres -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=BookMarket postgres

docker run --rm -d --name redis redis 

docker run --net=book_m --rm -d --name api-gw -e HOST=book -p 80:80 api-gw

docker build -t book:1
docker build -t api-gw . 

Чтобы создать таблицу в работающем контейнере Docker в определённой базе данных, например PostgreSQL, нужно: 1

Создать и запустить контейнер PostgreSQL с помощью команды docker run. Например: docker run --name postgresCont -e POSTGRES_PASSWORD=pass123 -p 5432:5432 -d postgres. 1
Открыть оболочку внутри контейнера с помощью команды 
docker exec -it postgresCont bash
psql -h localhost -U postgres
CREATE DATABASE BookMarket;
\c BookMarket;
DROP TABLE IF EXISTS books, authors, authors_books; CREATE TABLE books (id SERIAL PRIMARY KEY, title VARCHAR NOT NULL, price INTEGER NOT NULL); CREATE TABLE authors ( id SERIAL PRIMARY KEY, name VARCHAR NOT NULL); CREATE TABLE authors_books ( books_id INTEGER REFERENCES books(id), authors_id INTEGER REFERENCES authors(id)); CREATE TABLE users ( id SERIAL PRIMARY KEY, email TEXT NOT NULL UNIQUE, password TEXT NOT NULL );

 create-table:
    image: postgres
    container_name: create-table
    networks: 
      - book_m
    command: bash -c 'PGPASSWORD=postgres psql -U postgres --dbname BookMarket -p 5432 -h database_postgres -c "DROP TABLE IF EXISTS books, authors, authors_books; CREATE TABLE books (id SERIAL PRIMARY KEY, title VARCHAR NOT NULL, price INTEGER NOT NULL); CREATE TABLE authors ( id SERIAL PRIMARY KEY, name VARCHAR NOT NULL); CREATE TABLE authors_books ( books_id INTEGER REFERENCES books(id), authors_id INTEGER REFERENCES authors(id)); CREATE TABLE users ( id SERIAL PRIMARY KEY, email TEXT NOT NULL UNIQUE, password TEXT NOT NULL );"'
    depends_on: 
      database_postgres:
        condition: service_healthy 
